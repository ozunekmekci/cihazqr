# Generated by Django 5.2.1 on 2025-06-02 10:02

import devices.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('devices', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('brand', models.CharField(blank=True, max_length=255)),
                ('model', models.CharField(blank=True, max_length=255)),
                ('serial', models.CharField(blank=True, max_length=255)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(blank=True, max_length=50)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('qr_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hash_id', models.CharField(blank=True, max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=devices.models.device_document_upload_to)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='devices.device')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='devices.device')),
            ],
        ),
        migrations.CreateModel(
            name='FaultRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('sira_no', models.CharField(blank=True, max_length=50, null=True)),
                ('isleme_baslama_tarihi', models.DateTimeField(blank=True, null=True)),
                ('sorumlu_personel', models.CharField(blank=True, max_length=255)),
                ('ariza_tanimi', models.TextField(blank=True)),
                ('ariza_turu', models.CharField(blank=True, choices=[('mekanik', 'Mekanik Arıza'), ('elektrik', 'Elektriksel Arıza'), ('elektronik', 'Elektronik Kart Arızası'), ('yazilim', 'Yazılımsal Sorun'), ('kullanici', 'Kullanıcı Hatası'), ('kalibrasyon', 'Kalibrasyon Gereksinimi'), ('sarf_malzeme', 'Sarf Malzeme Bitti/Değişimi'), ('periyodik_bakim', 'Periyodik Bakım'), ('diger', 'Diğer')], max_length=50)),
                ('ariza_nedeni_tahmini', models.TextField(blank=True)),
                ('ariza_nedeni_kesin', models.TextField(blank=True)),
                ('yapilan_isler_sonuclar', models.TextField(blank=True)),
                ('kullanilan_parcalar', models.TextField(blank=True)),
                ('dis_servis_bilgileri', models.TextField(blank=True)),
                ('teslim_eden_kisi', models.CharField(blank=True, max_length=255)),
                ('teslim_eden_tarih_saat', models.DateTimeField(blank=True, null=True)),
                ('teslim_alan_kisi', models.CharField(blank=True, max_length=255)),
                ('teslim_alan_tarih_saat', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('open', 'Açık - Atanmadı'), ('assigned', 'Atandı - Müdahale Bekliyor'), ('in_progress', 'İşlemde - Müdahale Ediliyor'), ('on_hold', 'Beklemede - Parça/Onay Bekliyor'), ('resolved', 'Çözüldü - Test Edilecek'), ('closed', 'Kapalı - Kullanıma Verildi'), ('cancelled', 'İptal Edildi')], default='open', max_length=20)),
                ('created_by', models.CharField(blank=True, max_length=255)),
                ('updated_by', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faults', to='devices.device')),
            ],
        ),
        migrations.CreateModel(
            name='FaultDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=devices.models.fault_document_upload_to)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('fault_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='devices.faultrecord')),
            ],
        ),
    ]
